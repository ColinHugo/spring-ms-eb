server:
  port: 8071

spring:

  application:
    name: "configserver"

  profiles:
    # s칩lo se usa native para que se busque en el file system o classpath
    # active: native
    active: git

  cloud:
    config:
      server:
        # Estos valores solo se usan cuando los valores est치n en el classpath o en el file system
        # native:
          # search-locations: "classpath:/config"
          # search-locations: "file:///home/hugocolin/config"
        git:
          uri: "https://github.com/ColinHugo/spring-ms-eb"
          default-label: "main"
          timeout: 5
          clone-on-start: true
          force-pull: true

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

# Cuando el repo lanza el webhook al API monitor, config server usar치 spring cloud bus, el webhook se lanza a la url
# http://localhost:8071/monitor
# management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
  # valores para saber el estado de los contenedores http://localhost:8071/actuator/health
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true

# al poner este valor, se expondr치n 2 endpoints para encriptar y desencriptar
# http://localhost:8071/encrypt - http://localhost:8071/decrypt
encrypt:
  key: "45D81EC1EF61DF9AD8D3E5BB397F9"